name: Action

on:
  push:
  workflow_dispatch:
permissions:
  contents: read
  packages: write
env:
  FRONTEND: "frontend"
  BACKEND: "backend"
  TERMINAL: "terminal"

jobs:
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Docker Build ${{ env.FRONTEND }}}
      run: docker build -t frontend:latest frontend/
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Docker Build ${{ env.BACKEND }}
      run: docker build -t backend:latest backend/
  build-terminal:
    name: Build Terminal
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Docker Build ${{ env.TERMINAL }}
      run: docker build -t terminal:latest terminal/
  scan-frontend:
    name: Frontend Container Scan
    runs-on: ubuntu-latest
    needs: [build-frontend]
    steps:
      - uses: actions/checkout@v4
      - name: Vision One Container Security Scan - Frontend
        run: |
          docker build -t frontend:latest frontend/
          chmod +x tmas_install.sh && ./tmas_install.sh
          export TMAS_API_KEY=${{ secrets.TMAS_API_KEY }}
          docker save frontend:latest > image.tar
          tmas scan docker-archive:image.tar --malwareScan
  scan-backend:
    name: Backend Container Scan
    runs-on: ubuntu-latest
    needs: [build-backend]
    steps:
      - uses: actions/checkout@v4
      - name: Vision One Container Security Scan - Backend
        run: |
          docker build -t backend:latest backend/
          chmod +x tmas_install.sh && ./tmas_install.sh
          export TMAS_API_KEY=${{ secrets.TMAS_API_KEY }}
          docker save backend:latest > image.tar
          tmas scan docker-archive:image.tar --malwareScan
  scan-terminal:
    name: Terminal Container Scan
    runs-on: ubuntu-latest
    needs: [build-terminal]
    steps:
      - uses: actions/checkout@v4
      - name: Vision One Container Security Scan - Terminal
        run: |
          docker build -t terminal:latest terminal/
          chmod +x tmas_install.sh && ./tmas_install.sh
          export TMAS_API_KEY=${{ secrets.TMAS_API_KEY }}
          docker save terminal:latest > image.tar
          tmas scan docker-archive:image.tar --malwareScan
  push-frontend:
    name: Push Frontend
    runs-on: ubuntu-latest
    needs: [scan-frontend]
    steps:
    - uses: actions/checkout@v4
    - name: Docker Push Frontend
      run: |
        docker login ghcr.io -u felipecosta09 --password ${{ secrets.GITHUB_TOKEN }}
        docker build -t frontend:latest frontend/
        docker tag frontend:latest ghcr.io/felipecosta09/frontend:latest
        docker push ghcr.io/felipecosta09/frontend:latest
  push-backend:
    name: Push Backend
    runs-on: ubuntu-latest
    needs: [scan-backend]
    steps:
    - uses: actions/checkout@v4
    - name: Docker Push Backend
      run: |
        docker login ghcr.io -u felipecosta09 --password ${{ secrets.GITHUB_TOKEN }}
        docker build -t backend:latest backend/
        docker tag backend:latest ghcr.io/felipecosta09/backend:latest
        docker push ghcr.io/felipecosta09/backend:latest
  push-terminal:
    name: Push Terminal
    runs-on: ubuntu-latest
    needs: [scan-terminal]
    steps:
    - uses: actions/checkout@v4
    - name: Docker Push Terminal
      run: |
        docker login ghcr.io -u felipecosta09 --password ${{ secrets.GITHUB_TOKEN }}
        docker build -t terminal:latest terminal/
        docker tag terminal:latest ghcr.io/felipecosta09/terminal:latest
        docker push ghcr.io/felipecosta09/terminal:latest
  unit-test:
    name: Unit Test
    runs-on: ubuntu-latest
    needs: [push-frontend, push-backend, push-terminal]
    steps:
    - uses: actions/checkout@v4
    - name: Unit Test
      run: |
        echo "Unit Test"